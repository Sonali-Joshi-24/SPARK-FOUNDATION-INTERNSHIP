<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='owid-covid-data (owid-covid-data)' inline='true' name='federated.1dxul6o0j7dlfk111aiy21805si8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='excel-direct.0tcseix1o05emf1axtuhc0mwjddc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Sonali PROJECTS/Internship/SPARK-FOUNDATION-INTERNSHIP/TASK-6/owid-covid-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0tcseix1o05emf1axtuhc0mwjddc' name='owid-covid-data' table='[&apos;owid-covid-data$&apos;]' type='table'>
          <columns gridOrigin='A1:AO10001:no:A1:AO10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='integer' name='new_tests' ordinal='16' />
            <column datatype='integer' name='total_tests' ordinal='17' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='20' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='real' name='tests_per_case' ordinal='22' />
            <column datatype='real' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='integer' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0tcseix1o05emf1axtuhc0mwjddc' name='owid-covid-data' table='[&apos;owid-covid-data$&apos;]' type='table'>
          <columns gridOrigin='A1:AO10001:no:A1:AO10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='integer' name='new_tests' ordinal='16' />
            <column datatype='integer' name='total_tests' ordinal='17' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='20' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='real' name='tests_per_case' ordinal='22' />
            <column datatype='real' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='integer' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AO10001:no:A1:AO10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column-instance column='[continent]' derivation='Attribute' name='[attr:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Date)' hidden='true' name='[Action (Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Continent,Location)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:continent:nk]' />
          <groupfilter function='level-members' level='[none:location:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Continent,Location,YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:continent:nk]' />
          <groupfilter function='level-members' level='[none:location:nk]' />
          <groupfilter function='level-members' level='[tyr:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dxul6o0j7dlfk111aiy21805si8].[avg:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_cases:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data' id='owid-covid-data_9334CEE3557E4250A279510BA3C4EFF8'>
            <properties context=''>
              <relation connection='excel-direct.0tcseix1o05emf1axtuhc0mwjddc' name='owid-covid-data' table='[&apos;owid-covid-data$&apos;]' type='table'>
                <columns gridOrigin='A1:AO10001:no:A1:AO10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='integer' name='new_tests' ordinal='16' />
                  <column datatype='integer' name='total_tests' ordinal='17' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='18' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='19' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='20' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='21' />
                  <column datatype='real' name='tests_per_case' ordinal='22' />
                  <column datatype='real' name='positive_rate' ordinal='23' />
                  <column datatype='string' name='tests_units' ordinal='24' />
                  <column datatype='real' name='stringency_index' ordinal='25' />
                  <column datatype='integer' name='population' ordinal='26' />
                  <column datatype='real' name='population_density' ordinal='27' />
                  <column datatype='real' name='median_age' ordinal='28' />
                  <column datatype='real' name='aged_65_older' ordinal='29' />
                  <column datatype='real' name='aged_70_older' ordinal='30' />
                  <column datatype='real' name='gdp_per_capita' ordinal='31' />
                  <column datatype='real' name='extreme_poverty' ordinal='32' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='34' />
                  <column datatype='real' name='female_smokers' ordinal='35' />
                  <column datatype='real' name='male_smokers' ordinal='36' />
                  <column datatype='real' name='handwashing_facilities' ordinal='37' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
                  <column datatype='real' name='life_expectancy' ordinal='39' />
                  <column datatype='real' name='human_development_index' ordinal='40' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cumilative positive Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b07aa1' fontsize='18' italic='true'>Cumilitive-Positive-Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (owid-covid-data)' name='federated.1dxul6o0j7dlfk111aiy21805si8' />
          </datasources>
          <datasource-dependencies datasource='federated.1dxul6o0j7dlfk111aiy21805si8'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]'>
            <groupfilter function='level-members' level='[date]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:positive_rate:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:positive_rate:qk]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:positive_rate:qk]</rows>
        <cols>([federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk] * [federated.1dxul6o0j7dlfk111aiy21805si8].[tmn:date:qk])</cols>
        <page-trail-options enabled='true' end='37' mark-color='#e15759ce' mark-color-auto='false' mark-type='all' start='0' />
      </table>
      <simple-id uuid='{D6BDC084-255D-4C07-8881-427018E268F5}' />
    </worksheet>
    <worksheet name='Death Rate per Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='18' italic='true'>Death Rate Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (owid-covid-data)' name='federated.1dxul6o0j7dlfk111aiy21805si8' />
          </datasources>
          <datasource-dependencies datasource='federated.1dxul6o0j7dlfk111aiy21805si8'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]'>
            <groupfilter function='level-members' level='[date]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_deaths:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_deaths:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_deaths:qk] + [federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_deaths:qk])</rows>
        <cols>(([federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok] / [federated.1dxul6o0j7dlfk111aiy21805si8].[mn:date:ok]) * [federated.1dxul6o0j7dlfk111aiy21805si8].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{1D1A6930-2DA4-4E46-BF5B-74D35F82C398}' />
    </worksheet>
    <worksheet name='New Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='18' italic='true'>New Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (owid-covid-data)' name='federated.1dxul6o0j7dlfk111aiy21805si8' />
          </datasources>
          <datasource-dependencies datasource='federated.1dxul6o0j7dlfk111aiy21805si8'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Quarter-Trunc' name='[tqr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_cases:qk]' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_cases:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_cases:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_cases:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_cases:qk] + [federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_cases:qk])</rows>
        <cols>([federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk] * [federated.1dxul6o0j7dlfk111aiy21805si8].[tqr:date:qk])</cols>
      </table>
      <simple-id uuid='{84F22DEE-ACD0-4DD5-8EAE-AFC64F28D0EF}' />
    </worksheet>
    <worksheet name='Testing'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#9d7660' fontsize='18' italic='true'>Testing</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (owid-covid-data)' name='federated.1dxul6o0j7dlfk111aiy21805si8' />
          </datasources>
          <datasource-dependencies datasource='federated.1dxul6o0j7dlfk111aiy21805si8'>
            <column-instance column='[total_tests]' derivation='Avg' name='[avg:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[tests_per_case]' derivation='Sum' name='[sum:tests_per_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]'>
            <groupfilter function='level-members' level='[date]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:tests_per_case:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_tests:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dxul6o0j7dlfk111aiy21805si8].[avg:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_tests:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:tests_per_case:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:tests_per_case:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dxul6o0j7dlfk111aiy21805si8].[avg:total_tests:qk] + [federated.1dxul6o0j7dlfk111aiy21805si8].[sum:tests_per_case:qk])</rows>
        <cols>([federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk] / ([federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok] / ([federated.1dxul6o0j7dlfk111aiy21805si8].[qr:date:ok] / [federated.1dxul6o0j7dlfk111aiy21805si8].[mn:date:ok])))</cols>
      </table>
      <simple-id uuid='{749147F5-0113-41B6-A850-9266BAF50884}' />
    </worksheet>
    <worksheet name='Visualizing New_Case with Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='18' italic='true'>Visualzing case with Total number of Death</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (owid-covid-data)' name='federated.1dxul6o0j7dlfk111aiy21805si8' />
          </datasources>
          <datasource-dependencies datasource='federated.1dxul6o0j7dlfk111aiy21805si8'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]'>
            <groupfilter function='level-members' level='[date]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[Exclusions (Continent,Location,YEAR(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:continent:nk]' />
                <groupfilter function='level-members' level='[none:location:nk]' />
                <groupfilter function='level-members' level='[tyr:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
                  <groupfilter function='member' level='[tyr:date:ok]' member='#2020-01-01 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[Exclusions (Continent,Location,YEAR(Date))]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_deaths:qk]</column>
            <column>[federated.1dxul6o0j7dlfk111aiy21805si8].[Action (Date)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_deaths:qk]' />
              <text column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]' />
              <text column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:location:nk]' />
              <text column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:date:ok]' />
              <color column='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]' />
              <lod column='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{46CD969A-BF59-4227-A412-06B452B233E7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid-19 Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b6992d' fontsize='20'>Task:6  Covid-19 Analysis</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#b6992d' fontsize='20'>Author: Sonali Joshi</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1900' minheight='900' minwidth='1900' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='37' param='vert' w='99158' x='421' y='889'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='9111' id='38' w='99158' x='421' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='32' param='vert' w='99158' x='421' y='10000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='30' param='horz' w='99158' x='421' y='10000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='27' param='horz' w='99158' x='421' y='10000'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='24' param='horz' w='99158' x='421' y='10000'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='21' param='horz' w='99158' x='421' y='10000'>
                      <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='18' param='horz' w='99158' x='421' y='10000'>
                        <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='15' param='horz' w='99158' x='421' y='10000'>
                          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='12' param='horz' w='99158' x='421' y='10000'>
                            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89111' id='7' param='horz' w='99158' x='421' y='10000'>
                              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='89111' id='5' w='99158' x='421' y='10000'>
                                <zone h='47038' id='3' name='Visualizing New_Case with Death' w='21421' x='421' y='10000'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='42073' id='9' name='New Cases' w='58684' x='421' y='57038'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='47038' id='10' name='Death Rate per Continent' w='41737' x='57842' y='10000'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='47038' id='16' name='Testing' w='36000' x='21842' y='10000'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='42073' id='28' name='Cumilative positive Rate' w='40474' x='59105' y='57038'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#b6992d' fontsize='20'>Task:6  Covid-19 Analysis</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#b6992d' fontsize='20'>Author: Sonali Joshi</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='52' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='51' param='vert' w='99158' x='421' y='889'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='9111' id='38' w='99158' x='421' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47038' id='3' is-fixed='true' name='Visualizing New_Case with Death' w='21421' x='421' y='10000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47038' id='16' is-fixed='true' name='Testing' w='36000' x='21842' y='10000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47038' id='10' is-fixed='true' name='Death Rate per Continent' w='41737' x='57842' y='10000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42073' id='9' is-fixed='true' name='New Cases' w='58684' x='421' y='57038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42073' id='28' is-fixed='true' name='Cumilative positive Rate' w='40474' x='59105' y='57038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1CCD222E-7A39-4824-8A7E-56F8AD3417FD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Visualizing New_Case with Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:location:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[tyr:date:ok]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F8990F4-4FFE-40CC-9984-06DA93A83041}' />
    </window>
    <window class='worksheet' name='New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_cases:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[:Measure Names]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[Exclusions (Continent,Location)]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[attr:continent:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:location:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4488CBF3-586A-4848-A5B3-15E9B74155F4}' />
    </window>
    <window class='worksheet' name='Death Rate per Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[:Measure Names]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:location:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:new_deaths:qk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_cases:qk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[tmn:date:qk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{603B002D-0435-4B59-BC12-6C472E35BF7D}' />
    </window>
    <window class='worksheet' name='Cumilative positive Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-10-19#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:iso_code:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:location:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFADCBFE-51B1-46B7-AB3D-3DD64D5ED040}' />
    </window>
    <window class='worksheet' name='Testing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:tests_per_case:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:total_tests:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[none:location:nk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[sum:tests_per_case:qk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[twk:date:qk]</field>
            <field>[federated.1dxul6o0j7dlfk111aiy21805si8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED8562EB-861F-42ED-828C-C31BC53F3291}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid-19 Analysis'>
      <viewpoints>
        <viewpoint name='Cumilative positive Rate'>
          <current-page>
            <multibucket>
              <bucket>#2020-10-17#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death Rate per Continent' />
        <viewpoint name='New Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Testing'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Visualizing New_Case with Death'>
          <highlight field='[federated.1dxul6o0j7dlfk111aiy21805si8].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <device-preview visible='true' />
      <simple-id uuid='{F4B22754-590E-4CB9-8479-58B820E668F4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid-19 Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cumilative positive Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcd0lEQVR4nO2d2Y8k2XXevxs3ltwr16rq6a26enrlkLQ4tERRJCyJkii+GDIkgjRgkxYF
      yKBtGIIfbfk/sAXYMBcRFCm/WaYl+d0PJCAIkGwMZ4bTPdPdM91V1VVdW1fuW2z3Xj9kZ7G6
      K6sqMivWjPi9DKaRFXHyZn4ZEfd85xwihBBISIgpUtABJCQESSKAhFiTCCAh1iQCSIg1iQAS
      Ys3MAhBCINlAmo5kvabDj/U6lwD6/b6bscw9vV4v6BAihR/rNRe3QM2DffSGBp5tPYVpcxjD
      AVjyY3sqQghsbW2N/w+DwSDQeIJCDjqA8yPQ6XUg+jr293fR6/WgqVkQmYNSFR/cv4fPfP4L
      yKfn4K26CBu2sLffguAGuqaCclbBO//3b7Hyxi/htWoh6PB8I/LfCsFt9Ps6JFXC9evXARAQ
      00LP1mFbBmqLy2A2wxy8VVdptvvIZyVYTIap94FMHoXyEsCMoEPzFTKrFYJzjsFggGw263ZM
      c0u320U+nw86jMjgx3qd62dxOBwmOxtTMBwOQQgJOozI4Md6ORKAbfTxeG0DuXwJ7d4Ad25e
      BwCk02nkcjlPA5w3kivAdITiCiBrWRTzefQYw5WiiqYpkJcYOOewbdvTAOcJxliyXlPgx3o5
      EoAQAkRJoZYGnjw7wN1FAklQSJIEWU4eLp1CKU3Wawr8WC9HRyeEYHGxBgD4RHn0X57c+ifM
      AXORCEtImJVEAAmxJhFAQqxJBJAQa2IvgCSRF29iL4Dmn/93mJubQYeREBCxFoBgDMYHD9D4
      3vdhPXsWdDgJARBvARgGaLWCyjf/Jep/+r1EBDEk1gLgug4plYLy2muo/OEfovFnP4D9/CDo
      sBJ8JNYCEIYBKZ0GACiXLqL8jW+g/p3vwK7XA44swS9iLQDe7UI64mZVLl1E6V98HfVvfxd2
      oxFgZAl+4UgAQjB89PAB2o0DvP/wCZjXUfkE63YhvWK3Va9cQelr/wz1//atRAQxwJEZzmzt
      oD4UkBttcMHAuQBY9O3QdqMJUigcew/SxYvIf/nLOPgv/xWlf/OvQUslV86X2KGnIzR2aDVf
      RUHtQlIVSIYOJghUGn07tOj3odRqE9+DfOc2pK9+Bb0f/S9U/tU3XTlfYoeejvDYoeUU7ty9
      89K/ce5JPL7Cu13QwskdELQbN9D+y78e1UMkpYxzSbwfgns9SKcU9RNZBpEkCMvyMaoEP4m1
      AIRhgKS0U19DUhqErvsUUYLfxFoA3DBBtNMFQBcWwDtdnyJK8JvYCkAIAVgWiKqe+jpaLsOu
      J9nheSW+ArAsQJJApNOXQK5WwQ6SzPAYwdhcWcjjKwBdB3lhgzgNWinDbjZ9iCi8CCFgP3+O
      9l/+FXb/+D/CuP9+0CG5Rmw3pYVpgijKma+j5QpYTL1Bwrah37uP3k9+AlgWsr/6j7CwchX6
      vXtIvfGxoMNzhdgKgPf7kHJn9zWVclnwXnzmIAghwDsd9H78E+hvvw315k0Uv/oVKMvLAEbr
      1v/xT4IN0kXiK4AzkmBjpEwGvN+D4PzM54V5QOg6nv+nP0H+S19E7T/8e0ivbBKQdBpc1+dm
      PaL/DmaEtTuQHAiASBKIqkKYpg9RBY+58RTarZvIfvazx778wGg95FoN9t5+ANG5T2wFwDsd
      R1cAAJDS6dgkw+ztbahXr576GvXqVZhraz5F5C2OBMDtIe7du4/dnW28++49WHOwC8a6XUgF
      Z52HabEI1mx5HFE4MNfXoVy9cupr1OurMD/6yKeIvMVZe/RuAwMmYWuvjpvLC+jOQXdo1u4A
      6bSj+Em5DHN/H9LlS+c7ZwTs0Nb2NqRa7dQ4pQsXYG5seP5eQmOHVorLqNb7KFWWsFPv4OYy
      geDRtkMLfQi5UHAUv1KtgDeb536vYbdDC9sGIRLkM/IjIpsFkRVQzs/MpJ+H8NihCcXq6zcB
      AKVSGQAQ9bsgp3kAAJBrNQzW1r0NKATYB3XQSvnM1xFCIC8twtrdhXrl9NulsBPbh2BhmJDO
      MMKNoQsL4K22xxEFj7W5CeXiRUevVVdXYT6J/oNwLAUgbAYI7vgKIOVy4DEYcm1tbEC9tuLo
      terqfDwIx1MApjHVvauUToMbBgSbl3YAxxFCwNp6BuWSswd9eXkJ1vaOx1F5TzwFYEwnAACQ
      Utp8J8OEAGu3QItFRy8nigKiqeD9aNtEYikA7tAJehSSToMPBh5FFDxO3bFjCCFQL1+Gtb3t
      YVTeE08B9HqgU47flCsVsPr89gmyNjen3tFRrq3AfPzEm4B8IpYCYJ3jDbHOglbKsA/mtzLM
      3HjqeAdojLZ6Hcbjxx5F5A+xFABvtUCLC1P9Da3Md12AtbkJZeV0D9Cr0HIJrN6IdIVYLAXA
      etNfAeRyBWxOWyUKIWBt7xx6/p1CFAVSJg3e6XgUmffEUgB8hlsgaaEA1p7TZBhjAGeO8yJH
      UVdXYW5seBCUP8RTAL0e6JGu0E6gL5JhUb7cn4R9UIc85a//GHX1GqwI20Sc2aG5gXd++jb2
      t57ivTnoDi0M48x+QK9ymDcIuZtzFsz1NSiXL8/0t+rKCswIC8CZ1Y4zyLKMnmEDehe6JaAi
      unZophvgsgwxbeyKCns4nLlPaFjt0Mb6BlIfuztbbOk07HYLtmUBLvdPDY0dGoJCS2soloqw
      OZCSCYiIph1aCAHYNuR0euqaVprPAYMBZIeVZMf+PoR2aCEE2M4utC/9Nugsscky5GIJaLUg
      12quxhYaO7SkaLhxY2SHLpdHdlke0VthYVkgMp2poJtWRjtB0+6WhBohwNst0IXptoWPoly9
      AnPjqesC8IPYPQQLXZ/6/n+MXKvOXTJMDIendsh2gnb7ViSdoUKIGArANCGpswmAlstzZ4cw
      NzdnfgAeo166FMkRs2I4jJ8AeH8Aks3M9Ldyef7sENb6xplF8GdBMhnw4RAiYlNTWKsVQwF0
      O1Mb4cZI+fzcFcZYz55BPecV4LBXUMScofbeXvwEwNodSDM+8Em5HHi/PzfJMCEE7N09yBcu
      nPtY6soKzPX18wflI9bOTvwEMGqINdsVgFAKItH5GZlk2xCCg1B67kOpr1+PnDXa3tmNnwBG
      s4Fn28cHxiOTDBcjCg77oA656s7WpXLxYuRKJFmjGT8B8E5nlNCaEVoogLXmo0ucub7muAj+
      LEZbyyIyZaOCc3Bdj6EAhkOQzGy7QMCoR9C82KKtjadQrpzvAXjMqFfQEqzdXVeO5zW814eU
      ycRPAMI8ey7YadBKGawR/cIYIQSsZ8+mrgI7DXV1FeajD107npewVhO0Uo6hAAzDcUOsSdBK
      FfY8zAwTAnwwdNwh2wna69dhPInGg7C9uwd5cdGhHZoZeOett7H9bCvS3aGFbU/VEGsStFSa
      i1sg3utBSqdcPSZdXAR7Ho1EobW9DeXChSns0IqM3XoHq4t59EyBXAS7Q4vhEFCU88WcSYP1
      ejMdI0x2aPPpU8iXLrkbjySBZDLo/+w9aHfvnPtwXq6XtbMD7dNvOhQAoUilU7iytIi9gxZe
      16LZHZrZNqRU6lwxi3weQtdBHYxYfZUw2aEHm1vQrl1zPZ7y738djT/7IdjWFvK//cVzjVHy
      cr14twe17PAZQJI1vH7jBgqFBdxYvQp3yx78g+s6SOp8l31CCIgsR2a77ySsjQ1XH4DH0GIR
      1T/6t+D9Purf+jZYCK0jgjHAMkFSqXg9BM9SCzwJKRXtkUlCCNgHB5AveFPXQCjFwu/9LrKf
      /zwO/vOfhO7BmHe7kLJZEEmKlwBYx9lgvLOg5RLsKD8I2/boSuaCBeIkCCFI/4NPovLNb6L9
      Fz9C78c/Do1bdDQHoQIgZgUxvN2ZuiHWJGjE2yRau3ugLlkgzkJerKH67/4I5sZTNH/w5+DD
      oS/nPQ17dxfKa68BiJsAul1IudmMcEeRqxWwCNcFWJubrlkgnCBpGkpf/xq0u7fR+P4PfDvv
      Sdi7u5CXlgDETACs43wy5GnQShV2hNskWhsbUM9ZBDMthBBkfvmXwdrtwOcsWLt7kJdjKADe
      7bryEEyLC5FtByiEgLm5CdmDHaCzIISA5nPgna7v5z4K73UhvfgexEoAwjJnLog/ipTLgXXD
      t73nCM7Bu+7shs0CLZfBWs1Azg2MuoKA88PvQawEwIezd4Q4ipRKQZjm9I21QoC9uwvlkv+/
      /mPkWg328+eBnZ91RhWB4+ZmsRGAEGI0B9elubZSSotkZZjx6BFSLtgUZkVeXIQdoGWaPT+A
      XP75KNj4COAcDbEmQTIZ8H60RiYJIWB88ADa7duBxSAvLsIO0DBn7WxDfu3nNdCOvw2WaYIx
      G51ON5JDsmdpiHsacrkcvYEZYpwDqAYWAi0WwRrBPQPYu3svdfZz5DQSguODt/4OueUrGDDg
      bj43uqUQAjwk2b2z4LoOoqquxSuVy7CeP4dy43XHfxP0erF6HbS4cPjZBYKqgOtDR+vgxXpZ
      +/vI1mqHx3UkgGH7AD2DQRYSzPoO+levIk3EYZBRgPX7IJmMa/HSSgX2s2dTHS/QLx4A46OP
      oN25E+xnRimIrIx+kM64InuxXrzXe+l74EgAmeIifulXSuAQaBfzyCsEnEujfV0P/SRuYrbb
      kAsF1+JValUY9+5NdTxJkgJdL/PhI+R+7dcC/8xocQGi24V8Rm222+vFdR2EUshHHMGOnwGo
      okBRVFTLJdcC8hPeH0BacK/8T8oXIpUME0KMiuAvO5sE7yVBDRxk7faxQeCx2QUatUNxTwA0
      nwPvdiNzC8i7XRBNdW0X7DwEtRPEDg6OtXAPfjV8wi0r9BiiKIfDNqKA+eQJtBs3gg4DACAv
      LcLe3/f9vNb2zrFZaLERAO90Z26JeBJSKh2ZyjDjwUNod+8GHQYAQK4FIwB7J84C0Icg6bSr
      x5TyObBusMYuJwghYK6vQ72+GnQoAAApm4Ho930/r31wALlaeTkW36MICDEYumaDGCNXq2AR
      6BEkDAPCtiG5/P5nhWgauGH6WiEmhIAY6sem4cRHAJZ1roZYk6CVSiQGZphr61CvXQs6jEOI
      JEHKZnydtSCGQxBFAXmly0QsBDBybYpzNcSaRFSaZBkPH0K7fSvoMF6CFhbAWm3fzseaTUgT
      ymHjIQDTdP32BxgVx7NmcL4WJwghRjtAN28GHcpLyIs1sAP/bNH23v7E6Z7xEIDLRrgxUnY0
      MSbUMA7e7888Fsor5EV/d4KsnZ2JbWBiIQA3GmJNQsplwXvhFoC1uQnFhRFIbjMSgI9XgN1d
      yMvH12EKO7QBxjl6EfPAA+7VAr+KpKoA54EXeZ+G8egR1JDd/gAArVZ8bSxANA1ypXzs36ew
      Q/891AvXQAYdXLp5FykSHTu03W6D5PPexKrI4KazWmPOue/rZTz6EIWvfDl8n5OmQej6qXG5
      uV4L//SrACHHjufoCjC2Q3e7fciUQiA6NmjgRRZ4xsmQZ0E0DTykbRKFEGDNBuQAC2BOYmwl
      8a2slEzuaOvYDv2Zz5UgJAnd7gA5+ed2aCkE5qqzEL0e5KtXPImVFosQ3S6k0tkuWUmSfF0v
      e28ftFIJ7WdE83mIXu+wTeGr+LFejo8uyQqoRFFcCNdughPOOxnyNOjCAlgznEPz9A8+gHYz
      HAa4SdBKJfBt5HD+NLjMyArtjXBpKby5AOPDD0O3/38UuVaFvbsXaAzxEIBueJIIAwBaKoZy
      bOp4Crxy2Z0pkF7gdy5gErEQgDANkJT7iTAAoMVSKAXAez1IuWwoCmBOQl5cCrRJFhADAYwa
      YjHPrgBSblQZFjaMDx5Ae915x4ogoIV84Gs3/wJwuSHWq0i5LPggfMlB4+FDqCGpADsJkkqN
      rNoBbqnPvwAMA0T15vYHGPW+F5YVumywubEBdTU8FuhJEEpBFHU0vTMgJgrg/Xf+Bv/7f/4f
      hDO9Mx1C112vA3gVoqih6hPKDQOEyqEpgDkNaaEA1vbPFn3s/JP+MZ0tQU4D0ej4czq8PwDJ
      nt5/5rwQRQlVbbD5+HHof/3HyNVqoEVFxwQghImf/r97yOTSkR2HepRJvWDchgb8K/Yq9u7e
      4QyssCMvLcLeC24r9JgACFFx6/ZFrD3aRLjuameDd7uee+FHQx/CsxVq1+ug5ePOxzAi12pg
      AW6FTrgCcKTyS7i+Uj3sAi2YiY8+/BC9ThsPHj2JlDDM9XUoHs/DGtkhwpMNZgcHoBOsv2GE
      1mqwA2wscMwMt/vgPWy1mthpcxxW0BIKIgxsbWyDZzIAF2CMgXMOO+SNoaydXZBazds4C3nY
      m1tnnoMx5st62c0WsLAQ+s8GAISmgfX7E2P1Y72OCSC/uIx0V8fK5fzhFcA2dVg2oGTT6Lfr
      0PlVpCmFJEmQZUeG0kDghgEwG0qhcDgSxwvUag3W/ffPXAtKqT/rZRqQUylP37NbCEoB2wKd
      MLjbj/U6dvRcZQkXWvvY3LYxLh1QUlncvvvGi/9bAQCErb5iEqzeAC2XPf8iSLksmI8tPk5j
      lFQK/xd/DCEENJcD7/U8q9k4jYnboJxzbG49i3yWzNzYgHr1qufnkbLZwFP6Y0R/ACmfi8Sv
      /xipWAzsGWridzyl5VEsphGBH/lTsdbWfJmILqXTEJbta6ezk7Ab0dkBGiPXar4WyB9lwi6Q
      hY21dViQInQhnYy1tQV5acmXcxFFDkU2mNXrkE+osAorQdqiJ1wBCGQth6V8OlLbna/CB4NR
      O0QXW6KfBtFSECGoDbb39iEvLQYdxlQoF1+Dtb0TyLmPC0BYePT++9g8aDorGA4p9t4+5OVl
      3+6FadHfVn8nYdfroJXwFcGfBl1YAG8Hk0g8LgCi4Rc/91lkFBLJcahjzPV1qCvePwCPCUtp
      JKvXI5MEG0NSKQjTDMQWPcEKIUHYQxCiRPoh2Fxfh+JjR2RaCm4n4yis3Q5kO/E8EEpBNC0Q
      W/TEXaDBUIfg4c8inoQQAvbeHhSfHoABgC4UwcIwNE+IE3vghBmpUAhk/SZ6gTRNQ2l5Ge42
      E/cPYZqAwLFhCF5Cy+XAW6WPinKi9+UHXgwbCWBw3jEB7D28h61WHVqqHNGlfDENsOrvVuCo
      UW6w2eDx7U+UkmBj5FoN1p7/LVKOCSC3uIy8lofRex7ZbVBzfR3Kyoqv55SywXeKZvUGaC1a
      O0Bj5MVFsACSYce9QOVF/GL55X1kbun48PEacvkFNNtd3LlzK9RXB3NtHZnPfMbXc0qaBsEY
      BGPHTF1+wep1z4t/vIJWq7Cf+58Mc7TVL8kaVIljv9nDjVoGbVMgL4XXDm3t7IDUqv7HJlPY
      un5ip2iv7b1WvT6aWxbCz+QsREoDGwxeij0QO/QkLGMAU1AslrJYb/Rxd5EAIpx2aG6YAGOe
      W6AnIakaJMZAT1gTr+29vNFA+s6d0H0mThCUAoy9ZIsOxA49CSWVxa1btwEAFy+O/o2HNEvG
      XpQDBvEgOMoGt0B9sl+8yui9n92lOowc2qK7XV9v46LueD6G3xngo9BiEbwdXC6Adbu+eZ+8
      QCr632d1/gSwthbYTFxaKsFuBDg4m/NIJsHGaKur4D5ng6N3s3gG9u4u5ICGwtFSCebGRiDn
      FowdGwIdNTKf+xXfzzlXVwBumiMLtI8Z4KPQUhE8oPYorNWCFNEk2BgiSb53s54rAbB6A7RU
      CuxLIOVyYAGVRrJ6HXLEKsHCwFwJwFxb86UG+CSkXHCDs1mzGTkbdBiYKwFYGxuBPQADL7LB
      phlIp2j7oH7isLmEk5kvAWw9g7zsnwV6EkRWIALIxLJGI3LF8GFgbgTATRNcHwa+D040FcIw
      fD+vfXAQuWL4MDA3AmCNBuSAMsBHoYVCID2CeLcHyeMmwPPI3AjAXN/wvAmuE2ipDNYIoDQy
      4kmwoHCUORG2joePPgIFhU413L21Gjo7tLW+jtQbb5z9Qo+hpSKYzx0OhGWDqFGt3wsWZ6lD
      IiGTKyKfUbGxsYmhJaAhXHZoc3MTmd/8jeDjyeVg7ez42u2Y1Q9ACgWwkM0pOy+hsUNz20J/
      0Ecmm0ahXENGDpcdWtg2hGlCCcEzgFqrwXrwYOK6eGXvZa02lEo1FJ+Fm4TGDk21LO7cvgUA
      qL7YaQiTHZq1WqALxcC//AAg5XO+1wbbzQZoNdkCnYW5eAi2nj6FeuVy0GEAGNUGs46/u0Ds
      IHoNccPCXAjAXFsPNAN8FCmdHmWDfewUzZrNJAcwI3MhAOvZMyiXLgYdxiFE9TcbnNggZify
      AhCMgXe7kELUDpDIsq9zg3m/F5gFPOpEXgDm4ycjC7TPPvLTkAoFcD/b/PFotkMMA+H51syA
      9Wwb7R/9CAu/97tBh/IStFTybXC2sOzIV4IFSWQFYO3sovHDH6L0B9+AvBiugRByqeSbHYK1
      mqDl4IqAok4kBWDv76Px3T9F6Wtfg7K8HHQ4x/Czu4F9cBDZVihhIHICYM0W6t/7Popf/+eh
      2ft/Ferj1EPWaIKWkhzArERKAKzdRv2730Xxq1+BtroadDgn4qclmtXrkGs1X841j0RGAKzT
      Qf1b30bhn/wOtNevBx3OqYxapftTG2zX66ClaDbEDQNT2aE5UWDqOu588pO+Ds/g/T7q3/4O
      8l/6ElK3b/t45tkg6TS4PoTg3PPtWVavg1aj2RI9DDi2Q6dzRRAwZPIahraARPyzQ7f+x18g
      +4UvQPn4G8HbnZ1CKWzDAFF+/lPhhb2XDYYQmhaddZmCUNmhB4M+LlxYRqvdw1WVQHB/7NB8
      OATf20Pm029GaqtPUjVQziEdWR8v7L1EcFBZjtTaOCWUdujiC8uBX25o49GHUFdXI/cBS/kc
      WM9biwI3TRBV9ez4cSD0D8H6e+8h/alfCDqMqfFjbvC4FUrUfhzCRKgFIGx75PUP8ZbnSfgi
      gGYzqQM4J6EWgLWzM/qFi6DXhS4seC+AeiPpB3pOQi0A/e13kP6Hnw46jJkYXQG8tUPYBwdJ
      P9BzEloBCM6h37sP7ebNoEOZCSmf9zwbnNwCnZ/QCoB3OiApDTSi3c5owQcBJO0Qz01oBTB8
      92dIfeITQYcxM6NssA4hvNsw5sMhSDrt2fHjQGgFoL/7LlIf+1jQYcwMIQREooDlYSZTJJVg
      5yWUAuDDIfhgEHir8/NS+J1/DMjeTI3nug6ipTw5dpwI5f6i8egR1JWVyCd4vLyCsWYTtBSO
      ZmBRJpRXgOFbP0X6zTeDDiPUsHojeQB2AUcCEMzE/fcforO7iZ89fAIvW7AK24a9uwv12oqH
      Z4k+dqOR9AJyAUe3QISqqJQKgCqDdfcwtK551h3aWluHVK2ORDZnFl837b3W8+dQr12bSxv0
      mNDYoYVtoNVuQ65WUawuISsTCI+6Q/fv30f2zTfnrtMx4K69V7RaUBdrc7lOY0Jjhyayhtsv
      KrHGxUdebG8LIWA8eID8F3/L/YPPGSy5BXKFUD0Es3oDRJYhJcmdM+GGAaJpQYcReUIlAP3e
      PaQ/9amgw4gGSTtEVwiNAIQQGL7zDlKf+HjQoYQePhyCaFqSA3CB8AhANyB0PbmvdYC1vQ0l
      4lnysBAaARgPHkC7dSv5VXOA+fgJlJWrQYcxF4RGAMO33kLq48GPOY0C5tpaaCbiRJ1QCEDY
      Nuy9/eRDdYi9vQ3lYngm4kSZUAjAfPoU8vISCPXGOTlPcF0HUTUgRANBokwoVpGAIPeFXw86
      jEhgbW5BuXwpeVZyiVDk0dXV5NbHKebaGtSQNweOEs7coEKg2+1CcBvPDxpex5RwCskDsLv8
      f5aVHevWjkIJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death Rate per Continent' width='192'>
      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
      pvn/2uqgCLCiWeAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Testing' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Visualizing New_Case with Death' width='192'>
      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
      q90w5G1+Y48AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
